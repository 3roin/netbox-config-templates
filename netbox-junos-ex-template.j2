{# 
**************************************************
To-Do:
1. Auto assign interface description based on 
connections if exists

**************************************************
###         System configuration               ###
**************************************************
#}
system {
    host-name {{ device.name }};
    root-authentication {
        encrypted-password "{{ rootpasswd }}";
    }
    login {
        idle-timeout {{ idletimeout }};
    }
    services {
        ssh {
            root-login allow;
            protocol-version v2;
        }
        netconf {
            ssh {
                port {{ netconfport }};
            }
        }
    }
    syslog {
        user * {
            any emergency;
        }
        file interactive-commands {
            interactive-commands any;
        }
        file messages {
            any notice;
            authorization info;
        }
    }
}
{#
**************************************************
###         Chassis configuration              ###
**************************************************
#}
chassis {
    aggregated-devices {
        ethernet {
            device-count {{ aggdevcount }};
        }
    }
    alarm {
        management-ethernet {
            link-down ignore;
        }
    }
}
{#
**************************************************
###         Interfaces configuration           ###
**************************************************
#}
interfaces {
    {%- for interface in device.interfaces.all() %}
    {%- if "." in interface.name %}
    {%- set unit_id = interface.name.split(".")[1] %}
    {%- set ifname = interface.name.split(".")[0] %}
    {%- else %}
    {%- set ifname = interface.name %}
    {%- endif %}
    {%- set count_ipaddr = interface.ip_addresses.all() | length %}
    {%- if count_ipaddr > 0 %}
    {{ ifname }} {
        {%- if interface.enabled == false %}
        disable;
        {%- endif %}
        {%- if interface.type == "lag" %}
        aggregated-ether-options {
            lacp {
                active;
            }
            minimum-links 1;
        }
        {%- endif %}
        {%- if "." in interface.name %}
        unit {{ unit_id }} {
        {%- else %}
        unit 0 {
        {%- endif %}
            {%- if interface.description != "" %}
            description "{{ interface.description }}";
            {%- else %}
            description "Missing description";
            {%- endif %}
            family inet {
                {%- for ipaddr in interface.ip_addresses.all() %}
                address {{ ipaddr }};
                {%- endfor %}
            }
        }
    }
    {%- elif interface.lag != None %}
    {{ interface.name }} {
        {%- if interface.enabled == false %}
        disable;
        {%- endif %}
        {%- if interface.description != "" %}
        description "{{ interface.description }}";
        {%- else %}
        description "Missing description";
        {%- endif %}
        gigether-options {
            802.3ad {
                {{ interface.lag.name }};
            }
        }
    }
    {%- elif interface.tagged_vlans != None and "tagged" in interface.mode %}
    {{ interface.name }} {
        {%- if interface.enabled == false %}
        disable;
        {%- endif %}
        {%- if interface.description != "" %}
        description "{{ interface.description }}";
        {%- else %}
        description "Missing description";
        {%- endif %}
        {%- if interface.type == "lag" %}
        aggregated-ether-options {
            lacp {
                active;
            }
            minimum-links 1;
        }
        {%- endif %}
        unit 0 {
            family ethernet-switching {
                {%- if interface.mode == "tagged" %}
                interface-mode trunk;
                vlan {
                    members [ {% for vlan in interface.tagged_vlans.all() %}{{ vlan.vid }} {% endfor %}];
                }
                {%- if interface.untagged_vlan != None %}
                native-vlan-id {{ interface.untagged_vlan.vid }}
                {%- endif %}
                {%- elif "tagged-all" in interface.mode %}
                interface-mode trunk;
                vlan {
                    members all;
                }
                {%- if interface.untagged_vlan != None %}
                native-vlan-id {{ interface.untagged_vlan.vid }};
                {%- endif %}
                {%- endif %}
            }
        }
    }
    {%- elif interface.mode == "access" %}
    {{ interface.name }} {
        {%- if interface.enabled == false %}
        disable;
        {%- endif %} 
        {%- if interface.description != "" %}
        description "{{ interface.description }}";
        {%- else %}
        description "Missing description";
        {%- endif %}
        {%- if interface.type == "lag" %}
        aggregated-ether-options {
            lacp {
                active;
            }
            minimum-links 1;
        }
        {%- endif %}
        unit 0 {
            family ethernet-switching {
                interface-mode access;
                vlan {
                    members {{ interface.untagged_vlan.vid }};
                }
            }
        }
    }
    {%- else %}
    {{ interface.name }} {
        {%- if interface.enabled == false %}
        disable;
        {%- endif %} 
        {%- if interface.description != "" %}
        description "{{ interface.description }}";
        {%- endif %}
        unit 0;
    }
    {%- endif %}
    {%- endfor %}
}
{#
**************************************************
###            VLANs configuration             ###
**************************************************
#}
vlans {
    {%- for vl in device.site.vlans.all() %}
    VL_{{ vl.name }} {
        vlan-id {{ vl.vid }};
        {%- for interface in device.interfaces.all() %}
        {%- if "irb" in interface.name %}
        {%- set unit_id = interface.name.split(".")[1] | int %}
        {%- if unit_id == vl.vid %}
        l3-interface {{ interface.name }};
        {%- endif %}
        {%- endif %}
        {%- endfor %}
    }
    {%- endfor %}
}
{#
**************************************************
###              VRF configuration             ###
**************************************************
#}
routing-instances {
    {%- for interface in device.interfaces.all() %}
    {%- if interface.vrf != None %}
    {{ interface.vrf.name }} {
        instance-type virtual-router;
        interface {{ interface.name }};
        routing-options {
            {%- if staticroutes != None %}
            {%- for vrf in staticroutes.vrfs %}
            {%- if vrf == interface.vrf.name %}
            static {
                {%- for dest in staticroutes.vrfs[vrf] %}
                route {{ dest }} {
                    {%- for nh in staticroutes.vrfs[vrf][dest] %}
                    next-hop {{ nh }};
                    {%- endfor %}
                }
                {%- endfor %}
            }
            {%- endif %}
            {%- endfor %}
            {%- endif %}
        }        
    }
    {%- endif %}
    {%- endfor %}
}
{#
**************************************************
###        Routing-options configuration       ###
**************************************************
#}
routing-options {
    {%- if staticroutes != None %}
    {%- for vrf in staticroutes.vrfs %}
    {%- if vrf == "default" %}
    static {
        {%- for dest in staticroutes.vrfs[vrf] %}
        route {{ dest }} {
            {%- for nh in staticroutes.vrfs[vrf][dest] %}
            next-hop {{ nh }};
            {%- endfor %}
        }
        {%- endfor %}
    }
    {%- endif %}
    {%- endfor %}
    {%- endif %}
}